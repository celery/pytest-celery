# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pytest-celery

on:
  push:
    branches: ["main"]
    paths:
      - "**.py"
      - "**.txt"
      - ".github/workflows/python-package.yml"
      - "**.toml"
  pull_request:
    paths:
      - "**.py"
      - "**.txt"
      - "**.toml"
      - ".github/workflows/python-package.yml"

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  Unit:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: ["ubuntu-latest"]

    steps:
      - name: Fetch Docker Images
        run: |
          docker pull redis:latest
          docker pull rabbitmq:latest
          docker pull memcached:latest

      - name: Install apt packages
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt update
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/setup.py'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox-gh-actions

      - name: Install Poetry
        if: startsWith(matrix.os, 'ubuntu-')
        uses: snok/install-poetry@v1.3.4

      - name: Install tox
        run: |
          poetry install --with dev,test,ci

      - name: Run tox for "${{ matrix.python-version }}-unit"
        timeout-minutes: 5
        run: |
          tox --verbose --verbose -e "${{ matrix.python-version }}-unit" -- -n auto --reruns 3 --rerun-except AssertionError

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

  Integration:
    needs:
      - Unit
    if: needs.Unit.result == 'success'
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: ["ubuntu-latest"]

    steps:
      - name: Fetch Docker Images
        run: |
          docker pull redis:latest
          docker pull rabbitmq:latest
          docker pull memcached:latest

      - name: Install apt packages
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt update
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/setup.py'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox-gh-actions

      - name: Install Poetry
        if: startsWith(matrix.os, 'ubuntu-')
        uses: snok/install-poetry@v1.3.4

      - name: Install tox
        run: |
          poetry install --with dev,test,ci

      - name: Run tox for "${{ matrix.python-version }}-integration"
        timeout-minutes: 15
        run: |
          tox --verbose --verbose -e "${{ matrix.python-version }}-integration" -- -n auto --reruns 3 --rerun-except AssertionError

  Smoke:
    needs:
      - Integration
    if: needs.Integration.result == 'success'
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: ["ubuntu-latest"]

    steps:
      - name: Fetch Docker Images
        run: |
          docker pull redis:latest
          docker pull rabbitmq:latest
          docker pull memcached:latest

      - name: Install apt packages
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt update
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/setup.py'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox-gh-actions

      - name: Install Poetry
        if: startsWith(matrix.os, 'ubuntu-')
        uses: snok/install-poetry@v1.3.4

      - name: Install tox
        run: |
          poetry install --with dev,test,ci

      - name: Run tox for "${{ matrix.python-version }}-smoke"
        timeout-minutes: 50
        run: |
          tox --verbose --verbose -e "${{ matrix.python-version }}-smoke" -- -n auto --reruns 3 --rerun-except AssertionError
